/* structs/ArrayList header-forward file, generated with rock, the ooc compiler written in ooc */

#ifndef ___structs_ArrayList_fwd___
#define ___structs_ArrayList_fwd___

struct _structs_ArrayList__ArrayList;
typedef struct _structs_ArrayList__ArrayList structs_ArrayList__ArrayList;
struct _structs_ArrayList__ArrayListIterator;
typedef struct _structs_ArrayList__ArrayListIterator structs_ArrayList__ArrayListIterator;
struct _structs_ArrayList__ArrayListClass;
typedef struct _structs_ArrayList__ArrayListClass structs_ArrayList__ArrayListClass;
struct _structs_ArrayList__ArrayListIteratorClass;
typedef struct _structs_ArrayList__ArrayListIteratorClass structs_ArrayList__ArrayListIteratorClass;

#include <sdk/lang/stdio-fwd.h>
#include <sdk/lang/types-fwd.h>
#include <sdk/lang/memory-fwd.h>
#include <sdk/lang/system-fwd.h>
#include <sdk/lang/string-fwd.h>
#include <sdk/lang/vararg-fwd.h>
#include <sdk/structs/List-fwd.h>
structs_ArrayList__ArrayListClass *structs_ArrayList__ArrayList_class();
structs_ArrayList__ArrayList* structs_ArrayList__ArrayList_new(lang_types__Class* T);
void structs_ArrayList__ArrayList_init(structs_ArrayList__ArrayList* this);
void structs_ArrayList__ArrayList_init_impl(structs_ArrayList__ArrayList* this);
structs_ArrayList__ArrayList* structs_ArrayList__ArrayList_new_withCapacity(lang_types__Class* T, lang_types__Int capacity);
void structs_ArrayList__ArrayList_init_withCapacity(structs_ArrayList__ArrayList* this, lang_types__Int capacity);
void structs_ArrayList__ArrayList_init_withCapacity_impl(structs_ArrayList__ArrayList* this, lang_types__Int capacity);
structs_ArrayList__ArrayList* structs_ArrayList__ArrayList_new_withData(lang_types__Class* T, uint8_t* data, lang_types__Int size);
void structs_ArrayList__ArrayList_init_withData(structs_ArrayList__ArrayList* this, uint8_t* data, lang_types__Int size);
void structs_ArrayList__ArrayList_init_withData_impl(structs_ArrayList__ArrayList* this, uint8_t* data, lang_types__Int size);
void structs_ArrayList__ArrayList_add(structs_ArrayList__ArrayList* this, uint8_t* element);
void structs_ArrayList__ArrayList_add_impl(structs_ArrayList__ArrayList* this, uint8_t* element);
void structs_ArrayList__ArrayList_add_withIndex(structs_ArrayList__ArrayList* this, lang_types__Int index, uint8_t* element);
void structs_ArrayList__ArrayList_add_withIndex_impl(structs_ArrayList__ArrayList* this, lang_types__Int index, uint8_t* element);
void structs_ArrayList__ArrayList_clear(structs_ArrayList__ArrayList* this);
void structs_ArrayList__ArrayList_clear_impl(structs_ArrayList__ArrayList* this);
void structs_ArrayList__ArrayList_get(structs_ArrayList__ArrayList* this, uint8_t* __returnArg23, lang_types__Int index);
void structs_ArrayList__ArrayList_get_impl(structs_ArrayList__ArrayList* this, uint8_t* __returnArg23, lang_types__Int index);
lang_types__Int structs_ArrayList__ArrayList_indexOf(structs_ArrayList__ArrayList* this, uint8_t* element);
lang_types__Int structs_ArrayList__ArrayList_indexOf_impl(structs_ArrayList__ArrayList* this, uint8_t* element);
lang_types__Int structs_ArrayList__ArrayList_lastIndexOf(structs_ArrayList__ArrayList* this, uint8_t* element);
lang_types__Int structs_ArrayList__ArrayList_lastIndexOf_impl(structs_ArrayList__ArrayList* this, uint8_t* element);
void structs_ArrayList__ArrayList_removeAt(structs_ArrayList__ArrayList* this, uint8_t* __returnArg24, lang_types__Int index);
void structs_ArrayList__ArrayList_removeAt_impl(structs_ArrayList__ArrayList* this, uint8_t* __returnArg24, lang_types__Int index);
lang_types__Bool structs_ArrayList__ArrayList_remove(structs_ArrayList__ArrayList* this, uint8_t* element);
lang_types__Bool structs_ArrayList__ArrayList_remove_impl(structs_ArrayList__ArrayList* this, uint8_t* element);
void structs_ArrayList__ArrayList_set(structs_ArrayList__ArrayList* this, uint8_t* __returnArg25, lang_types__Int index, uint8_t* element);
void structs_ArrayList__ArrayList_set_impl(structs_ArrayList__ArrayList* this, uint8_t* __returnArg25, lang_types__Int index, uint8_t* element);
lang_types__Int structs_ArrayList__ArrayList_size(structs_ArrayList__ArrayList* this);
lang_types__Int structs_ArrayList__ArrayList_size_impl(structs_ArrayList__ArrayList* this);
void structs_ArrayList__ArrayList_ensureCapacity(structs_ArrayList__ArrayList* this, lang_types__Int newSize);
void structs_ArrayList__ArrayList_ensureCapacity_impl(structs_ArrayList__ArrayList* this, lang_types__Int newSize);
void structs_ArrayList__ArrayList_grow(structs_ArrayList__ArrayList* this);
void structs_ArrayList__ArrayList_grow_impl(structs_ArrayList__ArrayList* this);
void structs_ArrayList__ArrayList_checkIndex(structs_ArrayList__ArrayList* this, lang_types__Int index);
void structs_ArrayList__ArrayList_checkIndex_impl(structs_ArrayList__ArrayList* this, lang_types__Int index);
lang_types__Iterator* structs_ArrayList__ArrayList_iterator(structs_ArrayList__ArrayList* this);
lang_types__Iterator* structs_ArrayList__ArrayList_iterator_impl(structs_ArrayList__ArrayList* this);
structs_ArrayList__ArrayList* structs_ArrayList__ArrayList_clone(structs_ArrayList__ArrayList* this);
structs_ArrayList__ArrayList* structs_ArrayList__ArrayList_clone_impl(structs_ArrayList__ArrayList* this);
lang_types__Pointer structs_ArrayList__ArrayList_toArray(structs_ArrayList__ArrayList* this);
lang_types__Pointer structs_ArrayList__ArrayList_toArray_impl(structs_ArrayList__ArrayList* this);
void structs_ArrayList__ArrayList___defaults__(structs_ArrayList__ArrayList* this);
void structs_ArrayList__ArrayList___defaults___impl(structs_ArrayList__ArrayList* this);
structs_ArrayList__ArrayListIteratorClass *structs_ArrayList__ArrayListIterator_class();
structs_ArrayList__ArrayListIterator* structs_ArrayList__ArrayListIterator_new_iter(lang_types__Class* T, structs_ArrayList__ArrayList* list);
void structs_ArrayList__ArrayListIterator_init_iter(structs_ArrayList__ArrayListIterator* this, structs_ArrayList__ArrayList* list);
void structs_ArrayList__ArrayListIterator_init_iter_impl(structs_ArrayList__ArrayListIterator* this, structs_ArrayList__ArrayList* list);
lang_types__Bool structs_ArrayList__ArrayListIterator_hasNext(structs_ArrayList__ArrayListIterator* this);
lang_types__Bool structs_ArrayList__ArrayListIterator_hasNext_impl(structs_ArrayList__ArrayListIterator* this);
void structs_ArrayList__ArrayListIterator_next(structs_ArrayList__ArrayListIterator* this, uint8_t* __returnArg13);
void structs_ArrayList__ArrayListIterator_next_impl(structs_ArrayList__ArrayListIterator* this, uint8_t* __returnArg13);
lang_types__Bool structs_ArrayList__ArrayListIterator_hasPrev(structs_ArrayList__ArrayListIterator* this);
lang_types__Bool structs_ArrayList__ArrayListIterator_hasPrev_impl(structs_ArrayList__ArrayListIterator* this);
void structs_ArrayList__ArrayListIterator_prev(structs_ArrayList__ArrayListIterator* this, uint8_t* __returnArg14);
void structs_ArrayList__ArrayListIterator_prev_impl(structs_ArrayList__ArrayListIterator* this, uint8_t* __returnArg14);
lang_types__Bool structs_ArrayList__ArrayListIterator_remove(structs_ArrayList__ArrayListIterator* this);
lang_types__Bool structs_ArrayList__ArrayListIterator_remove_impl(structs_ArrayList__ArrayListIterator* this);
void structs_ArrayList__ArrayListIterator___defaults__(structs_ArrayList__ArrayListIterator* this);
void structs_ArrayList__ArrayListIterator___defaults___impl(structs_ArrayList__ArrayListIterator* this);
void structs_ArrayList_load();
void structs_ArrayList____OP_IDX_ArrayList_Int__T(uint8_t* __returnArg27, lang_types__Class* T, structs_ArrayList__ArrayList* list, lang_types__Int i);
void structs_ArrayList____OP_IDX_ASS_ArrayList_Int_T(lang_types__Class* T, structs_ArrayList__ArrayList* list, lang_types__Int i, uint8_t* element);
void structs_ArrayList____OP_ADD_ASS_ArrayList_T(lang_types__Class* T, structs_ArrayList__ArrayList* list, uint8_t* element);
lang_types__Bool structs_ArrayList____OP_SUB_ASS_ArrayList_T__Bool(lang_types__Class* T, structs_ArrayList__ArrayList* list, uint8_t* element);
structs_ArrayList__ArrayList* structs_ArrayList____OP_AS_T__array__ArrayList(lang_types__Class* T, _lang_array__Array array);

#endif // ___structs_ArrayList_fwd___
